{"version":3,"sources":["store/reducers/isLogged.js","store/reducers/index.js","store/store.js","helpers/constant.js","api/index.js","Login.js","store/actions/index.js","Signup.js","PrivateContent.js","ForgotPassword.js","ResetPassword.js","Routes.js","App.js","index.js"],"names":["defaultState","q","login","forgot","reset","loggedReducer","state","action","type","data","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","END_POINT","parseResponse","response","json","then","ok","Promise","reject","API","get","url","fetch","method","headers","Headers","post","body","JSON","stringify","put","Login","handleSubmit","event","preventDefault","FormData","currentTarget","datas","email","password","props","dispatch","self","a","msg","success","localStorage","removeItem","setItem","accessToken","loginUserId","history","push","catch","err","setState","error_text","error","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","this","style","color","value","message","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","mb","cursor","onClick","Component","connect","Signup","registeredUserId","register","Grid","container","spacing","item","xs","justifyContent","PrivateContent","logoutHandler","ForgotPassword","forgotPassword","ResetPassword","match","params","resetToken","sucess","resetPassword","Routes","exact","path","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90fa45a0.chunk.js","sourcesContent":["const defaultState = {\r\n    q: {},\r\n    login: {},\r\n    forgot: {},\r\n    reset: {}\r\n}\r\nconst loggedReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_CALLED':\r\n            return { ...state, q: action.data }\r\n        case 'REGISTER_CALLED':\r\n            return { ...state, q: action.data }\r\n        case 'LOGIN_CALLED':\r\n            return { ...state, login: action.data }\r\n        case 'FORGOT_PASSWORD_CALLED':\r\n            return { ...state, forgot: action.data }\r\n        case 'RESET_PASSWORD_CALLED':\r\n            return { ...state, reset: action.data }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default loggedReducer;","// import counterReducer from \"./counter\";\r\nimport loggedReducer from \"./isLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n    // counterReducer,\r\n    loggedReducer\r\n})\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from \"redux\";\r\nimport allReducers from './reducers'\r\nimport thunk from \"redux-thunk\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;","export const END_POINT = 'https://heroku-resource-login-module.herokuapp.com'\r\n\r\n//http://localhost:5000\r\n//https://heroku-resource-login-module.herokuapp.com","import { END_POINT } from '../helpers/constant'\r\n\r\n//RESPONSE PARSE\r\nfunction parseResponse(response) {\r\n\r\n    return response.json().then((json) => {\r\n        //if unsuccessfull api call happens we(promise) will reject request and catch the error message in catch block \r\n        if (!response.ok) {\r\n            return Promise.reject(json);\r\n        }\r\n        //when successfull api call happens will return whole payload in json format\r\n        return json;\r\n    });\r\n}\r\n\r\nconst API = {\r\n\r\n    //GET METHOD\r\n    async get(url) {\r\n        return fetch(`${END_POINT}${url}`, {\r\n            method: 'GET',\r\n            headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n        })\r\n            .then(parseResponse)\r\n    },\r\n\r\n    //POST METHOD\r\n    async post(url, data) {\r\n        const body = JSON.stringify(data)\r\n        return fetch(`${END_POINT}${url}`, {\r\n            method: 'POST',\r\n            headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n            body,\r\n        })\r\n            .then(parseResponse)\r\n    },\r\n\r\n    //PUT METHOD\r\n    async put(url, data) {\r\n        const body = JSON.stringify(data)\r\n        return fetch(`${END_POINT}${url}`, {\r\n            method: 'PUT',\r\n            headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n            body,\r\n        })\r\n            .then(parseResponse)\r\n    }\r\n\r\n}\r\n\r\nexport default API;","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from './store/actions'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\n\r\n\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error_text: null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const datas = {}\r\n        datas.email = data.get('email')\r\n        datas.password = data.get('password')\r\n        this.props.dispatch(login(this, datas))\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            // <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    {this.state.error_text === false ? <h3 style={{ color: \"green\" }}>{this.props.value.message}</h3> : <h3 style={{ color: \"red\" }}>{this.state.error_text}</h3>}\r\n                    <Box component=\"form\" onSubmit={this.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                <center>\r\n                    <Typography style={{ cursor: \"pointer\" }} onClick={() => this.props.history.push(\"/signup\")}>Don't have an account - Sign Up 🚀 </Typography>\r\n                </center>\r\n                <center>\r\n                    <Typography style={{ cursor: \"pointer\" }} onClick={() => this.props.history.push(\"/forgotPassword\")}>Forgot password 🍚 </Typography>\r\n                </center>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.loggedReducer.q\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Login);\r\n\r\n\r\n","// import axios from \"axios\"\r\nimport API from '../../api'\r\n\r\n\r\n\r\n//EASY WAY FOR API CALL\r\n// export const apicall = () => {\r\n//     return dispatch => {\r\n//         return axios.get('https://jsonplaceholder.typicode.com/posts').then((response) => {\r\n//             dispatch({ type: \"GET_CALLED\", data: response.data });\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const apicall = (self, datas) => {\r\n//     return dispatch => {\r\n//         return axios.post('https://heroku-resource-login-module.herokuapp.com/api/user/register', {\r\n//             name: datas.name,\r\n//             email: datas.email,\r\n//             password: datas.password\r\n//         }).then((response) => {\r\n//             console.log(self)\r\n//             console.log(datas)\r\n//             dispatch({ type: \"POST_CALLED\", data: response.data });\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nexport const register = (self, data) => {\r\n    return async dispatch => {\r\n        API.post(`/api/auth/register`, data)\r\n            .then(async (msg) => {\r\n                if (msg.success === true) {\r\n                    //api call is success\r\n                    localStorage.removeItem(\"auth-token\")\r\n                    localStorage.setItem(\"auth-token\", JSON.stringify(msg.accessToken))\r\n                    localStorage.setItem(\"user-id\", msg.registeredUserId)\r\n\r\n                    self.setState({ error_text: false })\r\n                    dispatch({ type: \"REGISTER_CALLED\", data: msg });\r\n                    self.props.history.push(\"/content\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //promise rejection will catch here (or) api call throws error\r\n                self.setState({ error_text: err.error })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const login = (self, data) => {\r\n    return async dispatch => {\r\n        API.post(`/api/auth/login`, data)\r\n            .then(async (msg) => {\r\n                if (msg.success === true) {\r\n                    //api call is success\r\n                    localStorage.removeItem(\"auth-token\")\r\n                    localStorage.setItem(\"auth-token\", JSON.stringify(msg.accessToken))\r\n                    localStorage.setItem(\"user-id\", msg.loginUserId)\r\n\r\n                    // self.setState({ error_text: false })\r\n                    dispatch({ type: \"LOGIN_CALLED\", data: msg });\r\n                    self.props.history.push(\"/content\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //promise rejection will catch here (or) api call throws error\r\n                self.setState({ error_text: err.error })\r\n                // console.log(err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const forgotPassword = (self, data) => {\r\n    return async dispatch => {\r\n        API.post(`/api/auth/forgotpassword`, data)\r\n            .then(async (msg) => {\r\n                if (msg.success === true) {\r\n                    //api call is success\r\n\r\n                    self.setState({ error_text: false })\r\n                    dispatch({ type: \"FORGOT_PASSWORD_CALLED\", data: msg });\r\n                    // self.props.history.push(\"/\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //promise rejection will catch here (or) api call throws error\r\n                self.setState({ error_text: err.error })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const resetPassword = (self, data) => {\r\n    return async dispatch => {\r\n        API.put(`/api/auth/resetPassword/${self.props.match.params.resetToken}`, data)\r\n            .then(async (msg) => {\r\n                if (msg.sucess === \"true\") {\r\n                    //api call is success\r\n\r\n                    self.setState({ error_text: false })\r\n                    dispatch({ type: \"RESET_PASSWORD_CALLED\", data: msg });\r\n                    // self.props.history.push(\"/\")\r\n                }\r\n            })\r\n            .catch(err => {\r\n                //promise rejection will catch here (or) api call throws error\r\n                self.setState({ error_text: err.error })\r\n            })\r\n\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { register } from './store/actions'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\n\r\n\r\n\r\n// function Copyright(props) {\r\n//     return (\r\n//         <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n//             {'Copyright © '}\r\n//             <Link color=\"inherit\" href=\"https://mui.com/\">\r\n//                 Your Website\r\n//             </Link>{' '}\r\n//             {new Date().getFullYear()}\r\n//             {'.'}\r\n//         </Typography>\r\n//     );\r\n// }\r\n\r\n\r\nclass Signup extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error_text: null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const datas = {}\r\n        datas.name = data.get('Name')\r\n        datas.email = data.get('email')\r\n        datas.password = data.get('password')\r\n        this.props.dispatch(register(this, datas))\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     this.props.dispatch(apicall())\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n\r\n                    {this.state.error_text === false ? <h3 style={{ color: \"green\" }}>{this.props.value.message}</h3> : <h3 style={{ color: \"red\" }}>{this.state.error_text}</h3>}\r\n                    <Box component=\"form\" noValidate onSubmit={this.handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"Name\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"Name\" //take out value using id attribute\r\n                                    label=\"Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            {/* <Grid item xs={12}>\r\n                                    <FormControlLabel\r\n                                        control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                        label=\"I accept terms and Conditions which apply.T&C.\"\r\n                                    />\r\n                                </Grid> */}\r\n                        </Grid>\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n\r\n\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <center>\r\n                                    <Typography style={{ cursor: \"pointer\" }} onClick={() => this.props.history.push(\"/\")}>Login 🚀 </Typography>\r\n                                </center>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* <Copyright sx={{ mt: 5 }} /> */}\r\n\r\n            </Container >\r\n            // </ThemeProvider >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.loggedReducer.q\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Signup);\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nclass PrivateContent extends Component {\r\n\r\n    logoutHandler = () => {\r\n        localStorage.removeItem(\"auth-token\");\r\n        localStorage.removeItem(\"user-id\");\r\n        this.props.history.push(\"/\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <center>\r\n                <Typography>\r\n                    You are viewing private Content page\r\n                </Typography>\r\n                <button onClick={this.logoutHandler}>Logout</button>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrivateContent;","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { forgotPassword } from './store/actions'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\n\r\n\r\n\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error_text: null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const datas = {}\r\n        datas.email = data.get('email')\r\n        this.props.dispatch(forgotPassword(this, datas))\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            // <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Forgot Password\r\n                    </Typography>\r\n                    {this.state.error_text === false ? <h3 style={{ color: \"green\" }}>{this.props.forgot.message}</h3> : <h3 style={{ color: \"red\" }}>{this.state.error_text}</h3>}\r\n                    <Box component=\"form\" onSubmit={this.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Send Email\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.loggedReducer.q,\r\n        forgot: state.loggedReducer.forgot\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ForgotPassword);\r\n\r\n\r\n","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { resetPassword } from './store/actions'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\n\r\n\r\n\r\n\r\nclass ResetPassword extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error_text: null\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const datas = {}\r\n        datas.password = data.get('password')\r\n        this.props.dispatch(resetPassword(this, datas))\r\n    };\r\n\r\n    // submit = (event) => {\r\n    //     console.log(\"submitted\"+event)\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            // <ThemeProvider theme={theme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Reset Password\r\n                    </Typography>\r\n                    {this.state.error_text === false ? <h3 style={{ color: \"green\" }}>{this.props.reset.message}</h3> : <h3 style={{ color: \"red\" }}>{this.state.error_text}</h3>}\r\n                    <Box component=\"form\" onSubmit={this.handleSubmit} noValidate sx={{ mt: 1 }}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"password\"\r\n                        />\r\n                        {/* <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"Confirm password\"\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            id=\"confirmpassword\"\r\n                            autoComplete=\"new-password\"\r\n                        /> */}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                            // onClick={this.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.loggedReducer.q,\r\n        reset: state.loggedReducer.reset\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ResetPassword);\r\n\r\n\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nimport Login from './Login'\r\nimport Signup from './Signup'\r\nimport PrivateContent from './PrivateContent'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport resetPassword from './ResetPassword'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/content\" component={PrivateContent} />\r\n                <Route path=\"/forgotPassword\" component={ForgotPassword} />\r\n                <Route path=\"/resetPassword/:resetToken\" component={resetPassword} />\r\n                <Route path=\"*\" component={() => 'Development in progress...'} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport store from \"./store/store\";\r\nimport Routes from \"./Routes\";\r\nimport { Provider } from 'react-redux';\r\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n// const theme = createTheme();\r\n\r\nclass App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Provider store={store}>\r\n                    {/* <ThemeProvider theme={theme}> */}\r\n                        <Routes />\r\n                    {/* </ThemeProvider> */}\r\n                </Provider>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\r\n  <App />, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}